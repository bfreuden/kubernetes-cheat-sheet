---
# Source: mongodb/templates/poddisruptionbudget-arbiter-rs.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    heritage: Helm
    release: RELEASE-NAME
  name: RELEASE-NAME-mongodb-arbiter
  namespace: mongodb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: mongodb
      release: RELEASE-NAME
      component: arbiter
---
# Source: mongodb/templates/poddisruptionbudget-secondary-rs.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    heritage: Helm
    release: RELEASE-NAME
  name: RELEASE-NAME-mongodb-secondary
  namespace: mongodb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: mongodb
      release: RELEASE-NAME
      component: secondary
---
# Source: mongodb/templates/serviceaccount.yml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-mongodb
  namespace: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    release: "RELEASE-NAME"
    heritage: "Helm"
secrets:
  - name: RELEASE-NAME-mongodb
---
# Source: mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-mongodb
  namespace: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    release: "RELEASE-NAME"
    heritage: "Helm"
type: Opaque
data:
  mongodb-root-password:  "c2VjcmV0"
  mongodb-replica-set-key: "eThNWmx3OUlxRw=="
---
# Source: mongodb/templates/svc-headless-rs.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-mongodb-headless
  namespace: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    release: "RELEASE-NAME"
    heritage: "Helm"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: mongodb
    port: 27017
  selector:
    app: mongodb
    release: RELEASE-NAME
---
# Source: mongodb/templates/svc-primary-rs.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-mongodb
  namespace: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    release: "RELEASE-NAME"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
  - name: metrics
    port: 9216
    targetPort: metrics
  selector:
    app: mongodb
    release: "RELEASE-NAME"
    component: primary
---
# Source: mongodb/templates/statefulset-arbiter-rs.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-mongodb-arbiter
  namespace: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    heritage: Helm
    release: RELEASE-NAME
spec:
  selector:
    matchLabels:
      app: mongodb
      release: RELEASE-NAME
      component: arbiter
  serviceName: RELEASE-NAME-mongodb-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongodb
        chart: mongodb-7.13.0
        release: RELEASE-NAME
        component: arbiter
    spec:
      serviceAccountName: RELEASE-NAME-mongodb
      securityContext:
        fsGroup: 1001
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: disk
                operator: In
                values:
                - hdd      
      containers:
        - name: mongodb-arbiter
          image: docker.io/bitnami/mongodb:4.2.6-debian-10-r13
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          ports:
          - containerPort: 27017
            name: mongodb
          env:
          - name: MONGODB_SYSTEM_LOG_VERBOSITY
            value: "0"
          - name: MONGODB_DISABLE_SYSTEM_LOG
            value: "no"
          - name: MONGODB_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MONGODB_REPLICA_SET_MODE
            value: "arbiter"
          - name: MONGODB_PRIMARY_HOST
            value: RELEASE-NAME-mongodb
          - name: MONGODB_REPLICA_SET_NAME
            value: "rs0"
          - name: MONGODB_ADVERTISED_HOSTNAME
            value: "$(MONGODB_POD_NAME).RELEASE-NAME-mongodb-headless.mongodb"
          - name: MONGODB_PRIMARY_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb
                key: mongodb-root-password
          - name: MONGODB_REPLICA_SET_KEY
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb
                key: mongodb-replica-set-key
          - name: MONGODB_ENABLE_IPV6
            value: "no"
          - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            value: "no"
          livenessProbe:
            tcpSocket:
              port: mongodb
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: mongodb
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
          resources:
            {}
      volumes:
---
# Source: mongodb/templates/statefulset-primary-rs.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-mongodb-primary
  namespace: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    heritage: Helm
    release: RELEASE-NAME
spec:
  serviceName: RELEASE-NAME-mongodb-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongodb
      release: RELEASE-NAME
      component: primary
  template:
    metadata:
      labels:
        app: mongodb
        chart: mongodb-7.13.0
        release: RELEASE-NAME
        component: primary
      annotations:
        prometheus.io/port: "9216"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: RELEASE-NAME-mongodb
      securityContext:
        fsGroup: 1001
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: disk
                operator: In
                values:
                - ssd
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - primary
                - secondary
            topologyKey: kubernetes.io/hostname      
      initContainers:
      containers:
        - name: mongodb-primary
          image: docker.io/bitnami/mongodb:4.2.6-debian-10-r13
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          ports:
          - containerPort: 27017
            name: mongodb
          env:
          - name: MONGODB_SYSTEM_LOG_VERBOSITY
            value: "0"
          - name: MONGODB_DISABLE_SYSTEM_LOG
            value: "no"
          - name: MONGODB_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MONGODB_REPLICA_SET_MODE
            value: "primary"
          - name: MONGODB_REPLICA_SET_NAME
            value: "rs0"
          - name: MONGODB_ADVERTISED_HOSTNAME
            value: "$(MONGODB_POD_NAME).RELEASE-NAME-mongodb-headless.mongodb"
          - name: MONGODB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb
                key: mongodb-root-password
          - name: MONGODB_REPLICA_SET_KEY
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb
                key: mongodb-replica-set-key
          - name: MONGODB_ENABLE_IPV6
            value: "no"
          - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            value: "no"
          livenessProbe:
            exec:
              command:
                - pgrep
                - mongod
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
          resources:
            {}
        - name: metrics
          image: docker.io/bitnami/mongodb-exporter:0.11.0-debian-10-r1
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
          - name: MONGODB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb
                key: mongodb-root-password
          command: [ 'sh', '-c', '/bin/mongodb_exporter --mongodb.uri mongodb://root:`echo $MONGODB_ROOT_PASSWORD | sed -r "s/@/%40/g;s/:/%3A/g"`@localhost:27017/admin ' ]
          ports:
          - name: metrics
            containerPort: 9216
          resources:
            null
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        storageClassName: mongovol
---
# Source: mongodb/templates/statefulset-secondary-rs.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: RELEASE-NAME-mongodb-secondary
  namespace: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    heritage: Helm
    release: RELEASE-NAME
spec:
  selector:
    matchLabels:
      app: mongodb
      release: RELEASE-NAME
      component: secondary
  podManagementPolicy: "Parallel"
  serviceName: RELEASE-NAME-mongodb-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongodb
        chart: mongodb-7.13.0
        release: RELEASE-NAME
        component: secondary
      annotations:
        prometheus.io/port: "9216"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: RELEASE-NAME-mongodb
      securityContext:
        fsGroup: 1001
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: disk
                operator: In
                values:
                - ssd
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - primary
                - secondary
            topologyKey: kubernetes.io/hostname      
      initContainers:
      containers:
        - name: mongodb-secondary
          image: docker.io/bitnami/mongodb:4.2.6-debian-10-r13
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          ports:
          - containerPort: 27017
            name: mongodb
          env:
          - name: MONGODB_SYSTEM_LOG_VERBOSITY
            value: "0"
          - name: MONGODB_DISABLE_SYSTEM_LOG
            value: "no"
          - name: MONGODB_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MONGODB_REPLICA_SET_MODE
            value: "secondary"
          - name: MONGODB_PRIMARY_HOST
            value: RELEASE-NAME-mongodb
          - name: MONGODB_REPLICA_SET_NAME
            value: "rs0"
          - name: MONGODB_ADVERTISED_HOSTNAME
            value: "$(MONGODB_POD_NAME).RELEASE-NAME-mongodb-headless.mongodb"
          - name: MONGODB_PRIMARY_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb
                key: mongodb-root-password
          - name: MONGODB_REPLICA_SET_KEY
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb
                key: mongodb-replica-set-key
          - name: MONGODB_ENABLE_IPV6
            value: "no"
          - name: MONGODB_ENABLE_DIRECTORY_PER_DB
            value: "no"
          livenessProbe:
            exec:
              command:
                - pgrep
                - mongod
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
          resources:
            {}
        - name: metrics
          image: docker.io/bitnami/mongodb-exporter:0.11.0-debian-10-r1
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
          - name: MONGODB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-mongodb
                key: mongodb-root-password
          command: [ 'sh', '-c', '/bin/mongodb_exporter --mongodb.uri mongodb://root:`echo $MONGODB_ROOT_PASSWORD | sed -r "s/@/%40/g;s/:/%3A/g"`@localhost:27017/admin ' ]
          ports:
          - name: metrics
            containerPort: 9216
          resources:
            null
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        storageClassName: mongovol
---
# Source: mongodb/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: RELEASE-NAME-mongodb
  namespace: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.13.0
    release: "RELEASE-NAME"
    heritage: "Helm"
  annotations:
spec:
  rules:
  - host: mongodb.local
    http:
      paths:
      - path: /
        backend:
          serviceName: RELEASE-NAME-mongodb
          servicePort: mongodb
  tls:
    - hosts:
      - mongodb.local
      secretName: mongodb.local-tls
